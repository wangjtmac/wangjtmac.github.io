import{_ as l,c as i,o as e,ag as r}from"./chunks/framework.BtmHriVb.js";const b=JSON.parse('{"title":"Java 学习路径","description":"","frontmatter":{},"headers":[],"relativePath":"guide/roadmap.md","filePath":"guide/roadmap.md"}'),t={name:"guide/roadmap.md"};function o(n,a,h,s,d,u){return e(),i("div",null,a[0]||(a[0]=[r('<h1 id="java-学习路径" tabindex="-1">Java 学习路径 <a class="header-anchor" href="#java-学习路径" aria-label="Permalink to &quot;Java 学习路径&quot;">​</a></h1><h2 id="📚-学习体系概览" tabindex="-1">📚 学习体系概览 <a class="header-anchor" href="#📚-学习体系概览" aria-label="Permalink to &quot;📚 学习体系概览&quot;">​</a></h2><p>本学习路径基于 <a href="https://pdai.tech" target="_blank" rel="noreferrer">pdai.tech</a> 的知识体系设计，旨在提供系统化的 Java 学习路径。</p><h2 id="🎯-学习目标" tabindex="-1">🎯 学习目标 <a class="header-anchor" href="#🎯-学习目标" aria-label="Permalink to &quot;🎯 学习目标&quot;">​</a></h2><ul><li>掌握 Java 核心语法和面向对象编程思想</li><li>理解 Java 集合框架、并发编程、IO 操作</li><li>熟悉 JVM 原理和性能调优</li><li>具备解决实际问题的编程能力</li><li>为技术面试做好充分准备</li></ul><h2 id="🗺️-学习路线图" tabindex="-1">🗺️ 学习路线图 <a class="header-anchor" href="#🗺️-学习路线图" aria-label="Permalink to &quot;🗺️ 学习路线图&quot;">​</a></h2><h3 id="第一阶段-java-基础-4-6周" tabindex="-1">第一阶段：Java 基础（4-6周） <a class="header-anchor" href="#第一阶段-java-基础-4-6周" aria-label="Permalink to &quot;第一阶段：Java 基础（4-6周）&quot;">​</a></h3><h4 id="_1-环境搭建与基础语法" tabindex="-1">1. 环境搭建与基础语法 <a class="header-anchor" href="#_1-环境搭建与基础语法" aria-label="Permalink to &quot;1. 环境搭建与基础语法&quot;">​</a></h4><ul><li>[ ] JDK 安装与配置</li><li>[ ] IDE 选择与配置（推荐 IntelliJ IDEA）</li><li>[ ] 第一个 Java 程序</li><li>[ ] 基础语法：变量、数据类型、运算符</li><li>[ ] 控制结构：条件语句、循环语句</li></ul><h4 id="_2-面向对象编程" tabindex="-1">2. 面向对象编程 <a class="header-anchor" href="#_2-面向对象编程" aria-label="Permalink to &quot;2. 面向对象编程&quot;">​</a></h4><ul><li>[ ] 类与对象的概念</li><li>[ ] 封装、继承、多态</li><li>[ ] 构造方法与方法重载</li><li>[ ] 访问修饰符</li><li>[ ] 抽象类与接口</li><li>[ ] 内部类</li></ul><h4 id="_3-核心机制" tabindex="-1">3. 核心机制 <a class="header-anchor" href="#_3-核心机制" aria-label="Permalink to &quot;3. 核心机制&quot;">​</a></h4><ul><li>[ ] 异常处理机制</li><li>[ ] 泛型机制详解</li><li>[ ] 注解机制详解</li><li>[ ] 反射机制详解</li><li>[ ] SPI 机制</li></ul><h4 id="_4-常用类与工具" tabindex="-1">4. 常用类与工具 <a class="header-anchor" href="#_4-常用类与工具" aria-label="Permalink to &quot;4. 常用类与工具&quot;">​</a></h4><ul><li>[ ] String 类详解</li><li>[ ] 包装类型与自动装箱/拆箱</li><li>[ ] 日期时间处理</li><li>[ ] 正则表达式</li></ul><h3 id="第二阶段-java-进阶-6-8周" tabindex="-1">第二阶段：Java 进阶（6-8周） <a class="header-anchor" href="#第二阶段-java-进阶-6-8周" aria-label="Permalink to &quot;第二阶段：Java 进阶（6-8周）&quot;">​</a></h3><h4 id="_1-集合框架" tabindex="-1">1. 集合框架 <a class="header-anchor" href="#_1-集合框架" aria-label="Permalink to &quot;1. 集合框架&quot;">​</a></h4><ul><li>[ ] Collection 接口体系</li><li>[ ] List：ArrayList、LinkedList、Vector</li><li>[ ] Set：HashSet、LinkedHashSet、TreeSet</li><li>[ ] Map：HashMap、LinkedHashMap、TreeMap、ConcurrentHashMap</li><li>[ ] 集合工具类：Collections、Arrays</li></ul><h4 id="_2-并发编程" tabindex="-1">2. 并发编程 <a class="header-anchor" href="#_2-并发编程" aria-label="Permalink to &quot;2. 并发编程&quot;">​</a></h4><ul><li>[ ] 线程基础：创建、生命周期、状态</li><li>[ ] 同步机制：synchronized、volatile、final</li><li>[ ] 锁机制：ReentrantLock、ReadWriteLock</li><li>[ ] JUC 工具类：CountDownLatch、CyclicBarrier、Semaphore</li><li>[ ] 线程池：ThreadPoolExecutor、ForkJoinPool</li><li>[ ] 并发集合：ConcurrentHashMap、BlockingQueue</li></ul><h4 id="_3-io-框架" tabindex="-1">3. IO 框架 <a class="header-anchor" href="#_3-io-框架" aria-label="Permalink to &quot;3. IO 框架&quot;">​</a></h4><ul><li>[ ] IO 模型概述</li><li>[ ] BIO：字节流、字符流、缓冲流</li><li>[ ] NIO：Channel、Buffer、Selector</li><li>[ ] AIO：异步 IO 操作</li><li>[ ] 网络编程：Socket、ServerSocket</li><li>[ ] Netty 框架入门</li></ul><h4 id="_4-jvm-虚拟机" tabindex="-1">4. JVM 虚拟机 <a class="header-anchor" href="#_4-jvm-虚拟机" aria-label="Permalink to &quot;4. JVM 虚拟机&quot;">​</a></h4><ul><li>[ ] JVM 内存结构：堆、栈、方法区</li><li>[ ] 类加载机制：加载、链接、初始化</li><li>[ ] 垃圾回收：GC 算法、垃圾收集器</li><li>[ ] 内存模型：happens-before、volatile</li><li>[ ] 性能调优：JVM 参数、监控工具</li><li>[ ] 问题排查：内存泄漏、死锁分析</li></ul><h3 id="第三阶段-框架与实践-4-6周" tabindex="-1">第三阶段：框架与实践（4-6周） <a class="header-anchor" href="#第三阶段-框架与实践-4-6周" aria-label="Permalink to &quot;第三阶段：框架与实践（4-6周）&quot;">​</a></h3><h4 id="_1-常用框架" tabindex="-1">1. 常用框架 <a class="header-anchor" href="#_1-常用框架" aria-label="Permalink to &quot;1. 常用框架&quot;">​</a></h4><ul><li>[ ] Spring Framework 基础</li><li>[ ] Spring Boot 快速开发</li><li>[ ] MyBatis ORM 框架</li><li>[ ] Maven/Gradle 构建工具</li></ul><h4 id="_2-实践项目" tabindex="-1">2. 实践项目 <a class="header-anchor" href="#_2-实践项目" aria-label="Permalink to &quot;2. 实践项目&quot;">​</a></h4><ul><li>[ ] 控制台应用程序</li><li>[ ] 文件处理工具</li><li>[ ] 网络聊天室</li><li>[ ] 简单 Web 应用</li><li>[ ] 数据库操作项目</li></ul><h2 id="📖-学习资源" tabindex="-1">📖 学习资源 <a class="header-anchor" href="#📖-学习资源" aria-label="Permalink to &quot;📖 学习资源&quot;">​</a></h2><h3 id="官方文档" tabindex="-1">官方文档 <a class="header-anchor" href="#官方文档" aria-label="Permalink to &quot;官方文档&quot;">​</a></h3><ul><li><a href="https://docs.oracle.com/javase/" target="_blank" rel="noreferrer">Oracle Java Documentation</a></li><li><a href="https://openjdk.java.net/" target="_blank" rel="noreferrer">OpenJDK Documentation</a></li></ul><h3 id="推荐书籍" tabindex="-1">推荐书籍 <a class="header-anchor" href="#推荐书籍" aria-label="Permalink to &quot;推荐书籍&quot;">​</a></h3><ul><li>《Java核心技术》- Cay S. Horstmann</li><li>《Effective Java》- Joshua Bloch</li><li>《Java并发编程实战》- Brian Goetz</li><li>《深入理解Java虚拟机》- 周志明</li></ul><h3 id="在线资源" tabindex="-1">在线资源 <a class="header-anchor" href="#在线资源" aria-label="Permalink to &quot;在线资源&quot;">​</a></h3><ul><li><a href="https://pdai.tech" target="_blank" rel="noreferrer">pdai.tech</a> - Java 全栈知识体系</li><li><a href="https://docs.oracle.com/javase/tutorial/" target="_blank" rel="noreferrer">Oracle Java Tutorials</a></li><li><a href="https://www.baeldung.com/" target="_blank" rel="noreferrer">Baeldung</a> - Java 教程网站</li></ul><h2 id="🎯-学习建议" tabindex="-1">🎯 学习建议 <a class="header-anchor" href="#🎯-学习建议" aria-label="Permalink to &quot;🎯 学习建议&quot;">​</a></h2><h3 id="学习方法" tabindex="-1">学习方法 <a class="header-anchor" href="#学习方法" aria-label="Permalink to &quot;学习方法&quot;">​</a></h3><ol><li><strong>理论与实践结合</strong>：每学一个知识点都要编写代码验证</li><li><strong>循序渐进</strong>：按照学习路径的顺序，不要跳跃式学习</li><li><strong>多做练习</strong>：通过大量练习巩固知识点</li><li><strong>总结归纳</strong>：及时记录学习心得和重点难点</li><li><strong>查漏补缺</strong>：定期回顾之前的知识点</li></ol><h3 id="实践建议" tabindex="-1">实践建议 <a class="header-anchor" href="#实践建议" aria-label="Permalink to &quot;实践建议&quot;">​</a></h3><ol><li><strong>搭建学习环境</strong>：配置好开发环境，熟悉 IDE 操作</li><li><strong>编写示例代码</strong>：每个知识点都要有对应的代码示例</li><li><strong>解决实际问题</strong>：尝试用学到的知识解决实际问题</li><li><strong>参与开源项目</strong>：阅读优秀的开源代码，学习最佳实践</li><li><strong>技术分享</strong>：通过博客、技术分享等方式输出学习成果</li></ol><h3 id="面试准备" tabindex="-1">面试准备 <a class="header-anchor" href="#面试准备" aria-label="Permalink to &quot;面试准备&quot;">​</a></h3><ol><li><strong>核心概念</strong>：深入理解 OOP、集合、并发、JVM 等核心概念</li><li><strong>常见面试题</strong>：整理和练习常见的 Java 面试题</li><li><strong>代码能力</strong>：提高编程能力，能够快速实现算法和数据结构</li><li><strong>项目经验</strong>：准备 1-2 个有代表性的项目，能够深入讲解</li><li><strong>持续学习</strong>：关注 Java 新版本特性和技术发展趋势</li></ol><h2 id="📅-学习计划模板" tabindex="-1">📅 学习计划模板 <a class="header-anchor" href="#📅-学习计划模板" aria-label="Permalink to &quot;📅 学习计划模板&quot;">​</a></h2><h3 id="每日学习计划" tabindex="-1">每日学习计划 <a class="header-anchor" href="#每日学习计划" aria-label="Permalink to &quot;每日学习计划&quot;">​</a></h3><ul><li><strong>理论学习</strong>：1-2 小时</li><li><strong>代码实践</strong>：1-2 小时</li><li><strong>总结记录</strong>：30 分钟</li></ul><h3 id="每周学习计划" tabindex="-1">每周学习计划 <a class="header-anchor" href="#每周学习计划" aria-label="Permalink to &quot;每周学习计划&quot;">​</a></h3><ul><li><strong>新知识学习</strong>：5 天</li><li><strong>复习巩固</strong>：1 天</li><li><strong>项目实践</strong>：1 天</li></ul><h3 id="每月学习计划" tabindex="-1">每月学习计划 <a class="header-anchor" href="#每月学习计划" aria-label="Permalink to &quot;每月学习计划&quot;">​</a></h3><ul><li><strong>知识体系梳理</strong>：1 次</li><li><strong>阶段性测试</strong>：1 次</li><li><strong>学习计划调整</strong>：1 次</li></ul><hr><blockquote><p>💡 <strong>提示</strong>：学习是一个循序渐进的过程，不要急于求成。保持持续学习的习惯，相信你一定能够掌握 Java 编程技能！</p></blockquote>',52)]))}const g=l(t,[["render",o]]);export{b as __pageData,g as default};
