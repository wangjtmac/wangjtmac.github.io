import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.BtmHriVb.js";const E=JSON.parse('{"title":"反射机制","description":"","frontmatter":{},"headers":[],"relativePath":"java/basic/reflection.md","filePath":"java/basic/reflection.md"}'),l={name:"java/basic/reflection.md"};function n(h,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="反射机制" tabindex="-1">反射机制 <a class="header-anchor" href="#反射机制" aria-label="Permalink to &quot;反射机制&quot;">​</a></h1><ul><li>Class 对象、构造器/方法/字段反射</li><li>动态创建与调用、访问私有成员（谨慎）</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Class&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; cls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Class.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo.User&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Object obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cls.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDeclaredConstructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div>`,3)]))}const c=i(l,[["render",n]]);export{E as __pageData,c as default};
