import{_ as i,c as s,o as t,ag as n}from"./chunks/framework.BtmHriVb.js";const c=JSON.parse('{"title":"注解机制","description":"","frontmatter":{},"headers":[],"relativePath":"java/basic/annotation.md","filePath":"java/basic/annotation.md"}'),e={name:"java/basic/annotation.md"};function l(p,a,h,r,o,k){return t(),s("div",null,a[0]||(a[0]=[n(`<h1 id="注解机制" tabindex="-1">注解机制 <a class="header-anchor" href="#注解机制" aria-label="Permalink to &quot;注解机制&quot;">​</a></h1><ul><li>元注解：@Target、@Retention、@Documented、@Inherited</li><li>运行时反射读取注解</li><li>自定义注解与处理器（APT）</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Retention</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RUNTIME)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(METHOD)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> Timed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { }</span></span></code></pre></div>`,3)]))}const E=i(e,[["render",l]]);export{c as __pageData,E as default};
