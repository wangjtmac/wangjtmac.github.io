import{_ as s,c as a,o,ag as l}from"./chunks/framework.D7tYYb9F.js";const v=JSON.parse('{"title":"VueUse 组合式函数库","description":"","frontmatter":{},"headers":[],"relativePath":"composables/vueuse/index.md","filePath":"composables/vueuse/index.md","lastUpdated":1752217222000}'),u={name:"composables/vueuse/index.md"};function t(i,e,r,n,h,m){return o(),a("div",null,e[0]||(e[0]=[l('<h1 id="vueuse-组合式函数库" tabindex="-1">VueUse 组合式函数库 <a class="header-anchor" href="#vueuse-组合式函数库" aria-label="Permalink to &quot;VueUse 组合式函数库&quot;">​</a></h1><p>VueUse 是一个基于 Vue 组合式 API 的实用工具集合，提供了大量开箱即用的组合式函数。它是 Vue 生态系统中最受欢迎的组合式函数库之一，拥有丰富的功能和活跃的社区支持。</p><h2 id="库概述" tabindex="-1">库概述 <a class="header-anchor" href="#库概述" aria-label="Permalink to &quot;库概述&quot;">​</a></h2><ul><li><strong>开发者</strong>: Anthony Fu 和众多社区贡献者</li><li><strong>官方网站</strong>: <a href="https://vueuse.org" target="_blank" rel="noreferrer">https://vueuse.org</a></li><li><strong>GitHub 仓库</strong>: <a href="https://github.com/vueuse/vueuse" target="_blank" rel="noreferrer">https://github.com/vueuse/vueuse</a></li><li><strong>当前版本</strong>: 10.x</li><li><strong>许可证</strong>: MIT</li></ul><h2 id="核心特点" tabindex="-1">核心特点 <a class="header-anchor" href="#核心特点" aria-label="Permalink to &quot;核心特点&quot;">​</a></h2><ol><li><strong>丰富的函数集合</strong>: 提供了超过 200 个组合式函数，涵盖了各种常见需求</li><li><strong>类型安全</strong>: 完全使用 TypeScript 编写，提供了完善的类型定义</li><li><strong>按需导入</strong>: 支持 tree-shaking，可以只导入需要的函数</li><li><strong>SSR 兼容</strong>: 大多数函数都支持服务器端渲染</li><li><strong>跨平台</strong>: 支持 Vue 2 和 Vue 3</li><li><strong>无依赖</strong>: 核心包不依赖于 Vue 之外的其他库</li></ol><h2 id="功能分类" tabindex="-1">功能分类 <a class="header-anchor" href="#功能分类" aria-label="Permalink to &quot;功能分类&quot;">​</a></h2><p>VueUse 的函数按功能可以分为以下几类：</p><h3 id="_1-动画相关" tabindex="-1">1. <a href="/vue-note/composables/vueuse/animation.html">动画相关</a> <a class="header-anchor" href="#_1-动画相关" aria-label="Permalink to &quot;1. [动画相关](/composables/vueuse/animation.md)&quot;">​</a></h3><p>处理动画、过渡和计时器的函数。</p><ul><li><a href="/vue-note/composables/vueuse/useRafFn.html">useRafFn</a> - 使用 requestAnimationFrame 的函数</li><li><a href="/vue-note/composables/vueuse/useTransition.html">useTransition</a> - 创建平滑的数值过渡效果</li><li><a href="/vue-note/composables/vueuse/useTimeAgo.html">useTimeAgo</a> - 将时间转换为相对时间格式</li></ul><h3 id="_2-数组操作" tabindex="-1">2. <a href="/vue-note/composables/vueuse/array.html">数组操作</a> <a class="header-anchor" href="#_2-数组操作" aria-label="Permalink to &quot;2. [数组操作](/composables/vueuse/array.md)&quot;">​</a></h3><p>用于处理响应式数组的实用函数。</p><h3 id="_3-浏览器-api" tabindex="-1">3. <a href="/vue-note/composables/vueuse/browser.html">浏览器 API</a> <a class="header-anchor" href="#_3-浏览器-api" aria-label="Permalink to &quot;3. [浏览器 API](/composables/vueuse/browser.md)&quot;">​</a></h3><p>封装浏览器 API 的组合式函数。</p><ul><li><a href="/vue-note/composables/vueuse/useImage.html">useImage</a> - 响应式加载图片</li></ul><h3 id="_4-dom-元素" tabindex="-1">4. <a href="/vue-note/composables/vueuse/elements.html">DOM 元素</a> <a class="header-anchor" href="#_4-dom-元素" aria-label="Permalink to &quot;4. [DOM 元素](/composables/vueuse/elements.md)&quot;">​</a></h3><p>处理 DOM 元素的函数。</p><h3 id="_5-网络请求" tabindex="-1">5. <a href="/vue-note/composables/vueuse/network.html">网络请求</a> <a class="header-anchor" href="#_5-网络请求" aria-label="Permalink to &quot;5. [网络请求](/composables/vueuse/network.md)&quot;">​</a></h3><p>处理网络请求和通信的函数。</p><h3 id="_6-传感器" tabindex="-1">6. <a href="/vue-note/composables/vueuse/sensors.html">传感器</a> <a class="header-anchor" href="#_6-传感器" aria-label="Permalink to &quot;6. [传感器](/composables/vueuse/sensors.md)&quot;">​</a></h3><p>处理用户输入和设备传感器的函数。</p><h3 id="_7-状态管理" tabindex="-1">7. <a href="/vue-note/composables/vueuse/state.html">状态管理</a> <a class="header-anchor" href="#_7-状态管理" aria-label="Permalink to &quot;7. [状态管理](/composables/vueuse/state.md)&quot;">​</a></h3><p>管理和同步状态的函数。</p><h3 id="_8-工具函数" tabindex="-1">8. <a href="/vue-note/composables/vueuse/utilities.html">工具函数</a> <a class="header-anchor" href="#_8-工具函数" aria-label="Permalink to &quot;8. [工具函数](/composables/vueuse/utilities.md)&quot;">​</a></h3><p>通用工具函数。</p><h2 id="常用函数" tabindex="-1">常用函数 <a class="header-anchor" href="#常用函数" aria-label="Permalink to &quot;常用函数&quot;">​</a></h2><p>以下是一些 VueUse 中最常用的组合式函数：</p><ul><li><a href="/vue-note/composables/vueuse/onClickOutside.html">onClickOutside</a> - 检测元素外部的点击</li><li><a href="/vue-note/composables/vueuse/onElementRemoval.html">onElementRemoval</a> - 监听元素从 DOM 中移除</li><li><a href="/vue-note/composables/vueuse/onKeyStroke.html">onKeyStroke</a> - 监听键盘按键事件</li><li><a href="/vue-note/composables/vueuse/onLongPress.html">onLongPress</a> - 监听元素长按事件</li><li><a href="/vue-note/composables/vueuse/onStartTyping.html">onStartTyping</a> - 监听用户开始输入事件</li><li><a href="/vue-note/composables/vueuse/useBattery.html">useBattery</a> - 获取设备电池状态</li><li><a href="/vue-note/composables/vueuse/useDeviceMotion.html">useDeviceMotion</a> - 获取设备运动传感器数据</li><li><a href="/vue-note/composables/vueuse/useDeviceOrientation.html">useDeviceOrientation</a> - 获取设备方向传感器数据</li><li><a href="/vue-note/composables/vueuse/useDevicePixelRatio.html">useDevicePixelRatio</a> - 获取设备像素比</li><li><a href="/vue-note/composables/vueuse/useDevicesList.html">useDevicesList</a> - 获取可用媒体设备列表</li><li><a href="/vue-note/composables/vueuse/useDisplayMedia.html">useDisplayMedia</a> - 屏幕共享</li><li><a href="/vue-note/composables/vueuse/useElementByPoint.html">useElementByPoint</a> - 通过坐标获取元素</li><li><a href="/vue-note/composables/vueuse/useElementHover.html">useElementHover</a> - 元素悬停状态</li><li><a href="/vue-note/composables/vueuse/useFocus.html">useFocus</a> - 跟踪或设置 DOM 元素的焦点状态</li><li><a href="/vue-note/composables/vueuse/useFocusWithin.html">useFocusWithin</a> - 元素或其后代是否获得焦点</li><li><a href="/vue-note/composables/vueuse/useFps.html">useFps</a> - 响应式获取 FPS</li><li><a href="/vue-note/composables/vueuse/useGeolocation.html">useGeolocation</a> - 获取地理位置</li><li><a href="/vue-note/composables/vueuse/useIdle.html">useIdle</a> - 跟踪用户是否不活跃</li><li><a href="/vue-note/composables/vueuse/useImage.html">useImage</a> - 响应式加载图片</li><li><a href="/vue-note/composables/vueuse/useInfiniteScroll.html">useInfiniteScroll</a> - 无限滚动</li><li><a href="/vue-note/composables/vueuse/useKeyModifier.html">useKeyModifier</a> - 响应式修饰键状态</li><li><a href="/vue-note/composables/vueuse/useMagicKeys.html">useMagicKeys</a> - 响应式按键状态</li><li><a href="/vue-note/composables/vueuse/useMouse.html">useMouse</a> - 跟踪鼠标位置</li><li><a href="/vue-note/composables/vueuse/useMouseInElement.html">useMouseInElement</a> - 鼠标相对于元素的位置</li><li><a href="/vue-note/composables/vueuse/useMousePressed.html">useMousePressed</a> - 跟踪鼠标按下状态</li><li><a href="/vue-note/composables/vueuse/useParallax.html">useParallax</a> - 创建视差效果</li><li><a href="/vue-note/composables/vueuse/usePointer.html">usePointer</a> - 响应式指针状态</li><li><a href="/vue-note/composables/vueuse/usePointerLock.html">usePointerLock</a> - 响应式指针锁定状态</li><li><a href="/vue-note/composables/vueuse/usePreferredDark.html">usePreferredDark</a> - 响应式暗色主题偏好</li><li><a href="/vue-note/composables/vueuse/usePreferredLanguages.html">usePreferredLanguages</a> - 响应式浏览器语言偏好</li><li><a href="/vue-note/composables/vueuse/usePermission.html">usePermission</a> - 响应式权限 API</li><li><a href="/vue-note/composables/vueuse/useScroll.html">useScroll</a> - 响应式滚动位置和状态</li><li><a href="/vue-note/composables/vueuse/useScrollLock.html">useScrollLock</a> - 锁定元素滚动</li><li><a href="/vue-note/composables/vueuse/useSpeechRecognition.html">useSpeechRecognition</a> - 语音识别</li><li><a href="/vue-note/composables/vueuse/useSpeechSynthesis.html">useSpeechSynthesis</a> - 语音合成</li><li><a href="/vue-note/composables/vueuse/useSwipe.html">useSwipe</a> - 响应式滑动检测</li><li><a href="/vue-note/composables/vueuse/useTextSelection.html">useTextSelection</a> - 响应式跟踪用户文本选择</li><li><a href="/vue-note/composables/vueuse/useUserMedia.html">useUserMedia</a> - 响应式媒体设备流</li></ul><h2 id="安装和使用" tabindex="-1">安装和使用 <a class="header-anchor" href="#安装和使用" aria-label="Permalink to &quot;安装和使用&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div>',32)]))}const p=s(u,[["render",t]]);export{v as __pageData,p as default};
