import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.D7tYYb9F.js";const o=JSON.parse('{"title":"Vue3 简介","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/introduction.md","filePath":"vue/vue3/introduction.md","lastUpdated":1751328890000}'),l={name:"vue/vue3/introduction.md"};function e(h,s,p,k,r,E){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="vue3-简介" tabindex="-1">Vue3 简介 <a class="header-anchor" href="#vue3-简介" aria-label="Permalink to &quot;Vue3 简介&quot;">​</a></h1><p>Vue3 是 Vue.js 的最新主要版本，于 2020 年 9 月 18 日正式发布。Vue3 带来了许多重大改进和新特性，使得 Vue 更加强大、高效和易用。</p><h2 id="vue3-的核心特性" tabindex="-1">Vue3 的核心特性 <a class="header-anchor" href="#vue3-的核心特性" aria-label="Permalink to &quot;Vue3 的核心特性&quot;">​</a></h2><h3 id="_1-性能提升" tabindex="-1">1. 性能提升 <a class="header-anchor" href="#_1-性能提升" aria-label="Permalink to &quot;1. 性能提升&quot;">​</a></h3><p>Vue3 相比 Vue2 有显著的性能提升：</p><ul><li><strong>更小的包体积</strong>：通过优化编译器和源码结构，Vue3 的核心运行时体积比 Vue2 小了约 41%。</li><li><strong>更快的初始渲染</strong>：Vue3 的初始渲染速度比 Vue2 快了约 55%。</li><li><strong>更低的内存占用</strong>：Vue3 的内存占用比 Vue2 减少了约 54%。</li><li><strong>更高效的更新性能</strong>：通过编译优化和响应式系统的重写，Vue3 的更新性能得到了极大提升。</li></ul><h3 id="_2-组合式-api-composition-api" tabindex="-1">2. 组合式 API (Composition API) <a class="header-anchor" href="#_2-组合式-api-composition-api" aria-label="Permalink to &quot;2. 组合式 API (Composition API)&quot;">​</a></h3><p>Vue3 引入了组合式 API，这是一种全新的逻辑复用和代码组织方式，解决了 Vue2 中混入(mixins)的缺点：</p><ul><li><strong>更好的逻辑复用</strong>：可以将相关功能的代码组织在一起，而不是分散在不同的选项中。</li><li><strong>更好的类型推导</strong>：对 TypeScript 的支持更加友好。</li><li><strong>更小的生产包体积</strong>：通过摇树优化(tree-shaking)，只包含你使用的功能。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ref, computed, onMounted } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 响应式状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 计算属性</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> doubleCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> computed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 方法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> increment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      count.value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 生命周期钩子</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onMounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;组件已挂载&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 暴露给模板</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      count,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      doubleCount,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      increment,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="_3-响应式系统重写" tabindex="-1">3. 响应式系统重写 <a class="header-anchor" href="#_3-响应式系统重写" aria-label="Permalink to &quot;3. 响应式系统重写&quot;">​</a></h3><p>Vue3 使用 ES6 的 Proxy 替代了 Vue2 中的 Object.defineProperty，解决了 Vue2 响应式系统的一些限制：</p><ul><li><strong>可以检测对象属性的添加和删除</strong>：不再需要使用 Vue.set 和 Vue.delete。</li><li><strong>可以检测数组索引和长度的变化</strong>：直接通过索引修改数组元素也能触发更新。</li><li><strong>可以监听 Map、Set、WeakMap 和 WeakSet</strong>：支持更多数据结构。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Vue3的响应式系统</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { reactive } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reactive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  count: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 添加新属性，可以被检测到</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">state.newProperty </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 删除属性，也可以被检测到</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state.count;</span></span></code></pre></div><h3 id="_4-片段-fragments" tabindex="-1">4. 片段(Fragments) <a class="header-anchor" href="#_4-片段-fragments" aria-label="Permalink to &quot;4. 片段(Fragments)&quot;">​</a></h3><p>Vue3 组件可以有多个根节点，不再需要一个单独的包裹元素：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- 这在Vue2中是不允许的 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;页头&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;内容&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">footer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;页脚&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">footer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="_5-teleport-组件" tabindex="-1">5. Teleport 组件 <a class="header-anchor" href="#_5-teleport-组件" aria-label="Permalink to &quot;5. Teleport 组件&quot;">​</a></h3><p>Teleport 是一个内置组件，允许你将一个组件的一部分模板&quot;传送&quot;到该组件 DOM 层次结构之外的 DOM 节点中：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">teleport</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;modal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- 模态框内容 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">teleport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这对于创建模态框、弹出菜单等需要&quot;打破&quot;组件层次结构的场景非常有用。</p><h3 id="_6-suspense-组件" tabindex="-1">6. Suspense 组件 <a class="header-anchor" href="#_6-suspense-组件" aria-label="Permalink to &quot;6. Suspense 组件&quot;">​</a></h3><p>Suspense 是一个内置组件，用于处理异步组件和异步数据：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> #default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">async-component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> #fallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">loading-spinner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>它允许你在异步操作完成之前显示加载状态。</p><h3 id="_7-更好的-typescript-支持" tabindex="-1">7. 更好的 TypeScript 支持 <a class="header-anchor" href="#_7-更好的-typescript-支持" aria-label="Permalink to &quot;7. 更好的 TypeScript 支持&quot;">​</a></h3><p>Vue3 是用 TypeScript 重写的，提供了更好的类型检查和 IDE 支持：</p><ul><li><strong>内置的 TypeScript 声明</strong>：不需要额外的类型声明包。</li><li><strong>组合式 API 的类型推导</strong>：更容易编写类型安全的 Vue 代码。</li><li><strong>类型化的插件系统</strong>：插件可以提供自己的类型扩展。</li></ul><h2 id="vue3-与-vue2-的比较" tabindex="-1">Vue3 与 Vue2 的比较 <a class="header-anchor" href="#vue3-与-vue2-的比较" aria-label="Permalink to &quot;Vue3 与 Vue2 的比较&quot;">​</a></h2><table tabindex="0"><thead><tr><th>特性</th><th>Vue3</th><th>Vue2</th></tr></thead><tbody><tr><td>响应式系统</td><td>Proxy</td><td>Object.defineProperty</td></tr><tr><td>API 风格</td><td>组合式 API + 选项式 API</td><td>主要是选项式 API</td></tr><tr><td>组件根节点</td><td>支持多根节点</td><td>只支持单根节点</td></tr><tr><td>TypeScript 支持</td><td>原生支持，类型推导更好</td><td>需要额外的类型声明，推导有限</td></tr><tr><td>性能</td><td>更快的渲染和更新</td><td>相对较慢</td></tr><tr><td>包大小</td><td>更小，支持摇树优化</td><td>相对较大</td></tr><tr><td>内置组件</td><td>增加了 Teleport、Suspense 等</td><td>无这些组件</td></tr></tbody></table><h2 id="何时使用-vue3" tabindex="-1">何时使用 Vue3 <a class="header-anchor" href="#何时使用-vue3" aria-label="Permalink to &quot;何时使用 Vue3&quot;">​</a></h2><p>以下情况推荐使用 Vue3：</p><ol><li><strong>新项目</strong>：对于新项目，建议直接使用 Vue3，以获得更好的性能和开发体验。</li><li><strong>大型应用</strong>：对于大型应用，Vue3 的组合式 API 可以更好地组织和复用代码。</li><li><strong>需要 TypeScript 支持</strong>：如果你使用 TypeScript，Vue3 提供了更好的类型支持。</li><li><strong>需要更好性能</strong>：如果你的应用需要更好的性能，Vue3 可以提供显著的性能提升。</li></ol><h2 id="学习资源" tabindex="-1">学习资源 <a class="header-anchor" href="#学习资源" aria-label="Permalink to &quot;学习资源&quot;">​</a></h2><ul><li><a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">Vue3 官方文档</a></li><li><a href="https://www.vuemastery.com/" target="_blank" rel="noreferrer">Vue Mastery</a></li><li><a href="https://vueschool.io/" target="_blank" rel="noreferrer">Vue School</a></li><li><a href="https://github.com/vuejs/core" target="_blank" rel="noreferrer">Vue3 GitHub 仓库</a></li></ul><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p>Vue3 是一个重大的版本升级，带来了许多新特性和改进。通过组合式 API、全新的响应式系统、更好的 TypeScript 支持和性能优化，Vue3 使得开发更大、更复杂的应用变得更加容易和高效。无论你是 Vue 新手还是有经验的开发者，Vue3 都值得学习和使用。</p>`,37)]))}const g=i(l,[["render",e]]);export{o as __pageData,g as default};
