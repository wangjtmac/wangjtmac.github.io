import{_ as s,c as l,o as a,ag as n}from"./chunks/framework.D7tYYb9F.js";const c=JSON.parse('{"title":"UniApp 基础介绍","description":"","frontmatter":{},"headers":[],"relativePath":"uniapp/introduction.md","filePath":"uniapp/introduction.md","lastUpdated":1752217310000}'),e={name:"uniapp/introduction.md"};function p(t,i,o,h,r,d){return a(),l("div",null,i[0]||(i[0]=[n(`<h1 id="uniapp-基础介绍" tabindex="-1">UniApp 基础介绍 <a class="header-anchor" href="#uniapp-基础介绍" aria-label="Permalink to &quot;UniApp 基础介绍&quot;">​</a></h1><h2 id="uniapp-简介与特点" tabindex="-1">UniApp 简介与特点 <a class="header-anchor" href="#uniapp-简介与特点" aria-label="Permalink to &quot;UniApp 简介与特点&quot;">​</a></h2><p>UniApp 是一个基于 Vue.js 的跨平台前端开发框架，由数字天堂（DCloud）开发。它的核心理念是&quot;开发一次，多端发布&quot;，让开发者只需维护一套代码，即可发布到多个平台。</p><h3 id="主要特点" tabindex="-1">主要特点 <a class="header-anchor" href="#主要特点" aria-label="Permalink to &quot;主要特点&quot;">​</a></h3><ol><li><p><strong>跨平台</strong>：</p><ul><li>支持 iOS、Android、Web（H5）</li><li>支持微信小程序、支付宝小程序、百度小程序、头条小程序等</li><li>支持快应用、360小程序、QQ小程序等</li></ul></li><li><p><strong>基于 Vue</strong>：</p><ul><li>使用 Vue.js 的语法开发</li><li>支持 Vue 组件、Vuex 状态管理</li><li>支持 Vue 的大部分特性</li></ul></li><li><p><strong>丰富的组件和 API</strong>：</p><ul><li>内置了大量跨平台组件</li><li>提供丰富的跨平台 API</li><li>统一的 API 设计，抹平平台差异</li></ul></li><li><p><strong>条件编译</strong>：</p><ul><li>支持条件编译，可以为不同平台编写差异化代码</li><li>可以适配不同平台的特殊功能</li></ul></li><li><p><strong>性能优化</strong>：</p><ul><li>优化的运行时性能</li><li>小程序平台使用原生渲染</li></ul></li><li><p><strong>生态丰富</strong>：</p><ul><li>插件市场拥有大量组件和模板</li><li>社区活跃，资源丰富</li></ul></li></ol><h2 id="开发环境搭建" tabindex="-1">开发环境搭建 <a class="header-anchor" href="#开发环境搭建" aria-label="Permalink to &quot;开发环境搭建&quot;">​</a></h2><h3 id="方式一-使用-hbuilderx-推荐" tabindex="-1">方式一：使用 HBuilderX（推荐） <a class="header-anchor" href="#方式一-使用-hbuilderx-推荐" aria-label="Permalink to &quot;方式一：使用 HBuilderX（推荐）&quot;">​</a></h3><p>HBuilderX 是 DCloud 推出的一款专用 IDE，内置了 UniApp 开发所需的环境和工具。</p><ol><li><p><strong>下载安装 HBuilderX</strong>：</p><ul><li>访问 <a href="https://www.dcloud.io/hbuilderx.html" target="_blank" rel="noreferrer">HBuilderX 官网</a> 下载</li><li>推荐下载 App 开发版（包含更多功能）</li></ul></li><li><p><strong>创建 UniApp 项目</strong>：</p><ul><li>点击 HBuilderX 顶部菜单 <code>文件</code> -&gt; <code>新建</code> -&gt; <code>项目</code></li><li>选择 <code>uni-app</code> 类型</li><li>填写项目名称，选择默认模板</li><li>点击创建</li></ul></li><li><p><strong>安装相关插件</strong>：</p><ul><li>点击 HBuilderX 顶部菜单 <code>工具</code> -&gt; <code>插件安装</code></li><li>安装 <code>内置浏览器</code>、<code>scss/sass 编译</code>、<code>uni-app 编译</code>、<code>Vue.js</code> 等插件</li></ul></li></ol><h3 id="方式二-使用-vue-cli-创建项目" tabindex="-1">方式二：使用 Vue-CLI 创建项目 <a class="header-anchor" href="#方式二-使用-vue-cli-创建项目" aria-label="Permalink to &quot;方式二：使用 Vue-CLI 创建项目&quot;">​</a></h3><p>如果你更习惯于使用命令行开发，也可以使用 Vue-CLI 创建 UniApp 项目。</p><ol><li><strong>安装 Vue-CLI</strong>：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @vue/cli</span></span></code></pre></div><ol start="2"><li><strong>创建 UniApp 项目</strong>：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dcloudio/uni-preset-vue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 选择模板</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可选模板：默认模板、Hello uni-app 等</span></span></code></pre></div><ol start="3"><li><strong>运行项目</strong>：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入项目目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行到 H5 平台</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:h5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行到微信小程序</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:mp-weixin</span></span></code></pre></div><h2 id="项目结构解析" tabindex="-1">项目结构解析 <a class="header-anchor" href="#项目结构解析" aria-label="Permalink to &quot;项目结构解析&quot;">​</a></h2><p>一个典型的 UniApp 项目结构如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─pages                  // 页面文件夹</span></span>
<span class="line"><span>│  ├─index               // index 页面</span></span>
<span class="line"><span>│  │  └─index.vue        // index 页面的 vue 文件</span></span>
<span class="line"><span>├─static                 // 存放应用引用的本地静态资源（如图片、视频等）</span></span>
<span class="line"><span>├─main.js                // Vue 初始化入口文件</span></span>
<span class="line"><span>├─App.vue                // 应用配置，用来配置 App 全局样式以及监听应用的生命周期</span></span>
<span class="line"><span>├─manifest.json          // 配置应用名称、appid、logo、版本等打包信息</span></span>
<span class="line"><span>└─pages.json             // 配置页面路由、导航条、选项卡等页面类信息</span></span></code></pre></div><h3 id="关键文件说明" tabindex="-1">关键文件说明 <a class="header-anchor" href="#关键文件说明" aria-label="Permalink to &quot;关键文件说明&quot;">​</a></h3><ol><li><p><strong>pages.json</strong>：</p><ul><li>配置页面路由</li><li>配置窗口样式</li><li>配置 tabBar</li><li>配置条件编译</li></ul></li><li><p><strong>manifest.json</strong>：</p><ul><li>应用的配置文件</li><li>配置应用名称、图标、权限等</li><li>各平台特定配置</li></ul></li><li><p><strong>App.vue</strong>：</p><ul><li>应用的生命周期</li><li>全局样式</li><li>全局数据和方法</li></ul></li><li><p><strong>main.js</strong>：</p><ul><li>Vue 实例的创建和初始化</li><li>全局组件注册</li><li>插件安装</li></ul></li><li><p><strong>uni.scss</strong>：</p><ul><li>全局样式变量</li><li>可在页面或组件中直接使用</li></ul></li></ol><h2 id="运行和调试" tabindex="-1">运行和调试 <a class="header-anchor" href="#运行和调试" aria-label="Permalink to &quot;运行和调试&quot;">​</a></h2><h3 id="在-hbuilderx-中运行" tabindex="-1">在 HBuilderX 中运行 <a class="header-anchor" href="#在-hbuilderx-中运行" aria-label="Permalink to &quot;在 HBuilderX 中运行&quot;">​</a></h3><ol><li><p><strong>运行到浏览器</strong>：</p><ul><li>点击工具栏的运行按钮，选择 <code>运行到浏览器</code></li><li>选择 Chrome 或其他浏览器</li></ul></li><li><p><strong>运行到小程序模拟器</strong>：</p><ul><li>点击工具栏的运行按钮，选择 <code>运行到小程序模拟器</code></li><li>选择对应的小程序平台（如微信开发者工具）</li></ul></li><li><p><strong>真机调试</strong>：</p><ul><li>连接手机到电脑</li><li>点击工具栏的运行按钮，选择 <code>运行到手机或模拟器</code></li><li>选择对应的设备</li></ul></li></ol><h3 id="调试技巧" tabindex="-1">调试技巧 <a class="header-anchor" href="#调试技巧" aria-label="Permalink to &quot;调试技巧&quot;">​</a></h3><ol><li><p><strong>使用 console.log</strong>：</p><ul><li>在代码中使用 <code>console.log()</code> 输出调试信息</li><li>在 HBuilderX 的控制台查看输出</li></ul></li><li><p><strong>使用 Vue Devtools</strong>：</p><ul><li>在 H5 平台可以使用 Vue Devtools 进行调试</li><li>安装 Chrome 扩展 Vue Devtools</li></ul></li><li><p><strong>使用条件编译进行调试</strong>：</p></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #ifdef DEBUG</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;调试模式下才会执行&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #endif</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>UniApp 是一个强大的跨平台开发框架，它结合了 Vue.js 的易用性和跨平台的能力，使得开发者可以高效地开发多端应用。通过本节的学习，我们了解了 UniApp 的基本概念、环境搭建、项目结构以及运行调试方法，为后续的深入学习打下了基础。</p><p>下一步，我们将学习 UniApp 的开发规范，包括目录结构、生命周期、路由与页面跳转以及样式与布局等内容。</p>`,31)]))}const k=s(e,[["render",p]]);export{c as __pageData,k as default};
