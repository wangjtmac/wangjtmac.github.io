import{_ as a,c as e,o as s,ag as i}from"./chunks/framework.4lVnIIy3.js";const x=JSON.parse('{"title":"Next.js","description":"","frontmatter":{},"headers":[],"relativePath":"next-js/index.md","filePath":"next-js/index.md"}'),n={name:"next-js/index.md"};function l(r,t,o,h,p,d){return s(),e("div",null,t[0]||(t[0]=[i('<h1 id="next-js" tabindex="-1">Next.js <a class="header-anchor" href="#next-js" aria-label="Permalink to &quot;Next.js&quot;">​</a></h1><p>Next.js 是一个基于 React 的全栈框架，它提供了构建现代 Web 应用程序所需的所有功能，包括服务器端渲染、静态站点生成、API 路由等。</p><h2 id="本章内容" tabindex="-1">本章内容 <a class="header-anchor" href="#本章内容" aria-label="Permalink to &quot;本章内容&quot;">​</a></h2><ul><li><a href="/react-note/next-js/introduction.html">Next.js 简介</a> - Next.js 的基本概念和特性</li><li><a href="/react-note/next-js/routing.html">路由系统</a> - Next.js 的文件系统路由</li><li><a href="/react-note/next-js/data-fetching.html">数据获取</a> - 使用 getStaticProps、getServerSideProps 和 SWR</li><li><a href="/react-note/next-js/rendering.html">SSR vs SSG</a> - 服务器端渲染与静态站点生成</li><li><a href="/react-note/next-js/api-routes.html">API 路由</a> - 创建 API 端点</li></ul><h2 id="next-js-的主要特性" tabindex="-1">Next.js 的主要特性 <a class="header-anchor" href="#next-js-的主要特性" aria-label="Permalink to &quot;Next.js 的主要特性&quot;">​</a></h2><ol><li><strong>零配置</strong>：开箱即用的开发环境，无需复杂配置</li><li><strong>混合渲染</strong>：同时支持静态生成和服务器渲染</li><li><strong>文件系统路由</strong>：基于文件系统的直观路由</li><li><strong>API 路由</strong>：在 Next.js 应用中创建 API 端点</li><li><strong>内置 CSS 和 Sass 支持</strong>：支持多种样式方案</li><li><strong>代码拆分和捆绑</strong>：自动优化应用性能</li><li><strong>快速刷新</strong>：即时反馈的开发体验</li></ol><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>创建新的 Next.js 应用：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> next-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-next-app</span></span></code></pre></div><p>或者在现有项目中安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> next</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-dom</span></span></code></pre></div><h2 id="学习目标" tabindex="-1">学习目标 <a class="header-anchor" href="#学习目标" aria-label="Permalink to &quot;学习目标&quot;">​</a></h2><p>通过本章的学习，你将能够：</p><ol><li>理解 Next.js 的核心概念和工作原理</li><li>掌握 Next.js 的路由系统和页面创建</li><li>学会使用不同的数据获取方法</li><li>理解服务器端渲染和静态站点生成的区别</li><li>创建和使用 API 路由</li><li>部署 Next.js 应用</li></ol><p>让我们开始 Next.js 的学习之旅吧！</p>',15)]))}const g=a(n,[["render",l]]);export{x as __pageData,g as default};
