import{_ as e,c as t,o as l,ag as i}from"./chunks/framework.4lVnIIy3.js";const p=JSON.parse('{"title":"React 基础","description":"","frontmatter":{},"headers":[],"relativePath":"react-basics/index.md","filePath":"react-basics/index.md"}'),r={name:"react-basics/index.md"};function o(c,a,n,s,h,d){return l(),t("div",null,a[0]||(a[0]=[i('<h1 id="react-基础" tabindex="-1">React 基础 <a class="header-anchor" href="#react-基础" aria-label="Permalink to &quot;React 基础&quot;">​</a></h1><p>React 是一个用于构建用户界面的 JavaScript 库，由 Facebook 开发并维护。本章节将介绍 React 的基础概念和核心特性。</p><h2 id="本章内容" tabindex="-1">本章内容 <a class="header-anchor" href="#本章内容" aria-label="Permalink to &quot;本章内容&quot;">​</a></h2><ul><li><a href="./jsx.html">JSX 语法</a> - JSX 语法规则及其工作原理</li><li><a href="./components.html">组件基础</a> - 函数组件与类组件的定义与使用</li><li><a href="./component-communication.html">组件通信</a> - 组件之间的数据传递方式</li><li><a href="./controlled-components.html">受控组件</a> - 表单元素的受控与非受控模式</li><li><a href="./props-state.html">Props 与 State</a> - 组件数据管理的两种方式</li><li><a href="./lifecycle.html">生命周期</a> - 组件从创建到销毁的各个阶段</li><li><a href="./event-handling.html">事件处理</a> - React 中的事件处理机制</li><li><a href="./conditional-rendering.html">条件渲染</a> - 根据条件渲染不同的内容</li><li><a href="./list-rendering.html">列表渲染</a> - 渲染列表数据</li></ul><h2 id="学习目标" tabindex="-1">学习目标 <a class="header-anchor" href="#学习目标" aria-label="Permalink to &quot;学习目标&quot;">​</a></h2><p>通过本章的学习，你将能够：</p><ol><li>理解 React 的核心概念和设计理念</li><li>掌握 JSX 语法和组件的创建方式</li><li>学会使用 Props 和 State 管理组件数据</li><li>了解组件之间的通信方式</li><li>掌握受控组件的实现和使用</li><li>了解组件的生命周期和常用钩子函数</li><li>掌握 React 中的事件处理方式</li><li>学会条件渲染和列表渲染的技巧</li></ol><p>让我们开始 React 基础的学习之旅吧！</p>',8)]))}const f=e(r,[["render",o]]);export{p as __pageData,f as default};
