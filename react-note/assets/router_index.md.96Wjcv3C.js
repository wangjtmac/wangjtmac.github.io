import{_ as e,c as r,o as t,ag as o}from"./chunks/framework.4lVnIIy3.js";const m=JSON.parse('{"title":"React Router","description":"","frontmatter":{"title":"React Router"},"headers":[],"relativePath":"router/index.md","filePath":"router/index.md"}'),l={name:"router/index.md"};function i(h,a,n,s,u,c){return t(),r("div",null,a[0]||(a[0]=[o('<h1 id="react-router" tabindex="-1">React Router <a class="header-anchor" href="#react-router" aria-label="Permalink to &quot;React Router&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>React Router 是 React 生态系统中最流行的路由库，它使得在 React 应用中实现导航和页面切换变得简单。React Router 保持 UI 与 URL 同步，具有简单的 API 和强大的功能，如代码分割、动态路由匹配、嵌套路由等。</p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li><strong>声明式路由</strong>: 使用 JSX 语法直观地定义路由结构</li><li><strong>嵌套路由</strong>: 支持复杂的路由嵌套，轻松构建多层级页面结构</li><li><strong>动态路由</strong>: 支持路径参数和查询参数，实现动态内容展示</li><li><strong>导航控制</strong>: 提供多种导航方式，包括链接和编程式导航</li><li><strong>路由守卫</strong>: 可实现权限控制和路由保护</li><li><strong>代码分割</strong>: 结合 React.lazy 实现按需加载，提升应用性能</li><li><strong>数据处理</strong>: 通过 loader 和 action 函数处理数据获取和表单提交</li></ul><h2 id="版本说明" tabindex="-1">版本说明 <a class="header-anchor" href="#版本说明" aria-label="Permalink to &quot;版本说明&quot;">​</a></h2><p>React Router 目前最新版本为 v6，与之前的版本相比有较大变化。本文档基于 React Router v6 编写。</p><h2 id="文档结构" tabindex="-1">文档结构 <a class="header-anchor" href="#文档结构" aria-label="Permalink to &quot;文档结构&quot;">​</a></h2><h3 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h3><ul><li><a href="./installation.html">安装</a> - 安装和基本设置</li><li><a href="./mode.html">模式</a> - 路由模式（BrowserRouter、HashRouter等）</li><li><a href="./routes.html">路由</a> - 路由配置和匹配</li><li><a href="./params.html">传参</a> - 路由参数传递</li><li><a href="./lazy-loading.html">懒加载</a> - 路由懒加载</li><li><a href="./operations.html">操作</a> - 路由操作</li><li><a href="./navigation.html">导航</a> - 路由导航</li><li><a href="./error-boundaries.html">边界处理</a> - 错误边界处理</li></ul><h3 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h3><ul><li><a href="./api/await.html">Await</a> - 异步数据等待组件</li><li><a href="./api/link.html">Link</a> - 链接组件</li><li><a href="./api/meta.html">Meta</a> - 元数据组件</li><li><a href="./api/navlink.html">NavLink</a> - 导航链接组件</li><li><a href="./api/redirect.html">redirect</a> - 重定向函数</li><li><a href="./api/scroll-restoration.html">ScrollRestoration</a> - 滚动恢复组件</li></ul><h3 id="hooks" tabindex="-1">Hooks <a class="header-anchor" href="#hooks" aria-label="Permalink to &quot;Hooks&quot;">​</a></h3><ul><li><a href="/react-note/router/router-hooks/use-navigate.html">useNavigate</a> - 导航钩子</li><li><a href="/react-note/router/router-hooks/use-navigation.html">useNavigation</a> - 导航状态钩子</li><li><a href="/react-note/router/router-hooks/use-params.html">useParams</a> - 参数钩子</li><li><a href="/react-note/router/router-hooks/use-search-params.html">useSearchParams</a> - 查询参数钩子</li><li><a href="/react-note/router/router-hooks/use-location.html">useLocation</a> - 位置钩子</li><li><a href="/react-note/router/router-hooks/use-loader-data.html">useLoaderData</a> - 加载数据钩子</li><li><a href="/react-note/router/router-hooks/use-action-data.html">useActionData</a> - 表单处理钩子</li><li><a href="/react-note/router/router-hooks/use-route-error.html">useRouteError</a> - 路由错误钩子</li><li><a href="/react-note/router/router-hooks/use-submit.html">useSubmit</a> - 表单提交钩子</li></ul><h2 id="学习资源" tabindex="-1">学习资源 <a class="header-anchor" href="#学习资源" aria-label="Permalink to &quot;学习资源&quot;">​</a></h2><ul><li><a href="https://reactrouter.com/" target="_blank" rel="noreferrer">React Router 官方文档</a></li><li><a href="https://react-router.docschina.org/" target="_blank" rel="noreferrer">React Router 中文文档</a></li><li><a href="https://reactrouter.com/en/main/start/tutorial" target="_blank" rel="noreferrer">React Router 教程</a></li></ul>',16)]))}const f=e(l,[["render",i]]);export{m as __pageData,f as default};
