import{_ as t,c as n,o as r,j as e,a}from"./chunks/framework.C6BsaGkr.js";const p=JSON.parse('{"title":"基操：判断两个类型相等（占位）","description":"","frontmatter":{},"headers":[],"relativePath":"summary/基操-判断两个类型相等.md","filePath":"summary/基操-判断两个类型相等.md","lastUpdated":1757560412000}'),s={name:"summary/基操-判断两个类型相等.md"};function o(u,l,_,d,c,i){return r(),n("div",null,l[0]||(l[0]=[e("h1",{id:"基操-判断两个类型相等-占位",tabindex:"-1"},[a("基操：判断两个类型相等（占位） "),e("a",{class:"header-anchor",href:"#基操-判断两个类型相等-占位","aria-label":'Permalink to "基操：判断两个类型相等（占位）"'},"​")],-1),e("p",null,"本页为占位页面，用于修复站内链接。后续将填充完整的技巧解析与示例。",-1),e("p",null,"核心思路（预告）：",-1),e("ul",null,[e("li",null,[a("利用分布式条件类型的函数参数逆变特性实现 "),e("code",null,"Equal<X, Y>"),a(" 判等")]),e("li",null,"在 includes、MutableKeys 等题中复用")],-1),e("p",null,"参考：type-challenges 社区常用 Equal 判等实现",-1)]))}const f=t(s,[["render",o]]);export{p as __pageData,f as default};
