import{_ as t,c as l,o as h,ag as s,j as i,a as n,t as r}from"./chunks/framework.C6BsaGkr.js";const _=JSON.parse('{"title":"00090 - 获取可选属性键值","description":"","frontmatter":{},"headers":[],"relativePath":"type-challenges/problems/hard/00090-获取可选属性键值.md","filePath":"type-challenges/problems/hard/00090-获取可选属性键值.md","lastUpdated":1757560412000}'),p={name:"type-challenges/problems/hard/00090-获取可选属性键值.md"},k={id:"frontmatter-title",tabindex:"-1"};function d(e,a,o,g,y,E){return h(),l("div",null,[a[1]||(a[1]=s(`<p><a href="/typescript-note/type-challenges/hard.html">← 返回 Hard 目录</a></p><blockquote><p>内容来源：yuzai/type-challenge（90-获取可选属性键值.md） 原文链接：<a href="https://raw.githubusercontent.com/yuzai/type-challenge/main/docs/type-challenges/problems/hard/00090-%E8%8E%B7%E5%8F%96%E5%8F%AF%E9%80%89%E5%B1%9E%E6%80%A7%E9%94%AE%E5%80%BC" target="_blank" rel="noreferrer">https://raw.githubusercontent.com/yuzai/type-challenge/main/docs/type-challenges/problems/hard/00090-获取可选属性键值</a></p></blockquote><h1 id="_00090-获取可选属性键值" tabindex="-1">00090 - 获取可选属性键值 <a class="header-anchor" href="#_00090-获取可选属性键值" aria-label="Permalink to &quot;00090 - 获取可选属性键值&quot;">​</a></h1><hr><h2 id="title-90-获取可选属性键值lang-zh-cn" tabindex="-1">title: 90-获取可选属性键值 lang: zh-CN <a class="header-anchor" href="#title-90-获取可选属性键值lang-zh-cn" aria-label="Permalink to &quot;title: 90-获取可选属性键值
lang: zh-CN&quot;">​</a></h2>`,5)),i("h1",k,[n(r(e.$frontmatter.title)+" ",1),a[0]||(a[0]=i("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1))]),a[2]||(a[2]=s(`<h2 id="题目描述" tabindex="-1">题目描述 <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;题目描述&quot;">​</a></h2><p>实现高级 util 类型<code>OptionalKeys&lt;T&gt;</code>，该类型将 T 中所有可选属性的键合并为一个联合类型。</p><h2 id="分析" tabindex="-1">分析 <a class="header-anchor" href="#分析" aria-label="Permalink to &quot;分析&quot;">​</a></h2><p>之前已经讨论过获取可选属性，那么这题只需要把属性值取出来即可。送分题啦。</p><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OptionalKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> keyof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> never</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="知识点" tabindex="-1">知识点 <a class="header-anchor" href="#知识点" aria-label="Permalink to &quot;知识点&quot;">​</a></h2><ol><li>keyof</li></ol><hr><div class="nav-pager"><span>上一题：<a href="/type-challenges/problems/type-challenges/problems/hard/00089-获取必填属性键值">00089 获取必填属性键值</a></span><span style="float:right;">下一题：<a href="/type-challenges/problems/type-challenges/problems/hard/00112-大写首字母">00112 大写首字母</a></span></div>`,10))])}const m=t(p,[["render",d]]);export{_ as __pageData,m as default};
