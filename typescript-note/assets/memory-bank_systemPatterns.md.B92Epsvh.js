import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.C6BsaGkr.js";const m=JSON.parse('{"title":"TypeScript 系统模式","description":"","frontmatter":{},"headers":[],"relativePath":"memory-bank/systemPatterns.md","filePath":"memory-bank/systemPatterns.md","lastUpdated":1752020944000}'),r={name:"memory-bank/systemPatterns.md"};function o(s,l,n,h,d,u){return e(),a("div",null,l[0]||(l[0]=[t('<h1 id="typescript-系统模式" tabindex="-1">TypeScript 系统模式 <a class="header-anchor" href="#typescript-系统模式" aria-label="Permalink to &quot;TypeScript 系统模式&quot;">​</a></h1><h2 id="类型系统模式" tabindex="-1">类型系统模式 <a class="header-anchor" href="#类型系统模式" aria-label="Permalink to &quot;类型系统模式&quot;">​</a></h2><ul><li>类型安全优先</li><li>渐进式类型增强</li><li>类型推断最大化</li><li>类型守卫模式</li><li>泛型约束模式</li><li>条件类型模式</li><li>类型工具组合</li></ul><h2 id="代码组织模式" tabindex="-1">代码组织模式 <a class="header-anchor" href="#代码组织模式" aria-label="Permalink to &quot;代码组织模式&quot;">​</a></h2><ul><li>功能模块化</li><li>类型与实现分离</li><li>接口优先设计</li><li>单一职责原则</li><li>依赖注入模式</li><li>可测试性设计</li><li>层次化架构</li></ul><h2 id="设计模式实现" tabindex="-1">设计模式实现 <a class="header-anchor" href="#设计模式实现" aria-label="Permalink to &quot;设计模式实现&quot;">​</a></h2><ul><li>工厂模式</li><li>单例模式</li><li>观察者模式</li><li>策略模式</li><li>装饰器模式</li><li>适配器模式</li><li>命令模式</li><li>组合模式</li></ul><h2 id="函数式编程模式" tabindex="-1">函数式编程模式 <a class="header-anchor" href="#函数式编程模式" aria-label="Permalink to &quot;函数式编程模式&quot;">​</a></h2><ul><li>纯函数设计</li><li>不可变数据</li><li>高阶函数</li><li>函数组合</li><li>Option/Maybe 模式</li><li>Either/Result 模式</li><li>函数式数据处理</li></ul><h2 id="异步处理模式" tabindex="-1">异步处理模式 <a class="header-anchor" href="#异步处理模式" aria-label="Permalink to &quot;异步处理模式&quot;">​</a></h2><ul><li>Promise 链式调用</li><li>Async/Await 模式</li><li>错误处理策略</li><li>取消操作模式</li><li>并发控制</li><li>异步数据流</li></ul><h2 id="状态管理模式" tabindex="-1">状态管理模式 <a class="header-anchor" href="#状态管理模式" aria-label="Permalink to &quot;状态管理模式&quot;">​</a></h2><ul><li>状态机实现</li><li>不可变状态</li><li>单向数据流</li><li>事件驱动架构</li><li>响应式编程</li><li>状态容器设计</li></ul><h2 id="测试模式" tabindex="-1">测试模式 <a class="header-anchor" href="#测试模式" aria-label="Permalink to &quot;测试模式&quot;">​</a></h2><ul><li>单元测试策略</li><li>类型测试</li><li>模拟与存根</li><li>属性测试</li><li>集成测试方法</li><li>测试驱动开发</li></ul>',15)]))}const p=i(r,[["render",o]]);export{m as __pageData,p as default};
