import{_ as a,c as l,o as i,ag as t}from"./chunks/framework.C6BsaGkr.js";const u=JSON.parse('{"title":"记忆库总览与索引","description":"","frontmatter":{},"headers":[],"relativePath":"memory-bank/notes.md","filePath":"memory-bank/notes.md","lastUpdated":1755503976000}'),r={name:"memory-bank/notes.md"};function o(n,e,s,m,c,h){return i(),l("div",null,e[0]||(e[0]=[t('<h1 id="记忆库总览与索引" tabindex="-1">记忆库总览与索引 <a class="header-anchor" href="#记忆库总览与索引" aria-label="Permalink to &quot;记忆库总览与索引&quot;">​</a></h1><p>本目录用于沉淀研究过程中的“可复用知识”。相比章节式的阅读笔记，这里更偏向于：</p><ul><li>可落地的 checklist / 模板</li><li>关键概念的速查与对比</li><li>实践中踩坑与最佳实践</li></ul><h2 id="目录索引" tabindex="-1">目录索引 <a class="header-anchor" href="#目录索引" aria-label="Permalink to &quot;目录索引&quot;">​</a></h2><ul><li>项目简介与定位：/memory-bank/projectbrief</li><li>技术上下文：/memory-bank/techContext</li><li>产品上下文：/memory-bank/productContext</li><li>系统模式：/memory-bank/systemPatterns</li><li>活动上下文：/memory-bank/activeContext</li><li>进度跟踪：/memory-bank/progress</li><li>任务看板：/memory-bank/tasks</li><li>风格指南：/memory-bank/style-guide</li><li>研究文档： <ul><li>TypeScript 类型挑战研究：/memory-bank/research/type-challenges</li><li>Programming TypeScript 研读：/memory-bank/research/programming-typescript-book</li><li>tsconfig 最佳实践：/memory-bank/research/tsconfig-best-practices</li></ul></li></ul><h2 id="使用建议" tabindex="-1">使用建议 <a class="header-anchor" href="#使用建议" aria-label="Permalink to &quot;使用建议&quot;">​</a></h2><ul><li>先在主题章节里系统阅读，再将沉淀内容抽取到记忆库，避免重复与冗长</li><li>同一主题的“原理解释”放在章节区，“速查/模板/清单/踩坑”放在记忆库</li><li>对外链使用标题化锚点，避免裸链接</li></ul><h2 id="贡献约定" tabindex="-1">贡献约定 <a class="header-anchor" href="#贡献约定" aria-label="Permalink to &quot;贡献约定&quot;">​</a></h2><ul><li>标题层级从二级开始（文档已有一级标题）</li><li>代码块尽量自包含可复制运行</li><li>重要概念统一用术语表说明（可在本文件底部补充）</li></ul><h2 id="术语表-摘录" tabindex="-1">术语表（摘录） <a class="header-anchor" href="#术语表-摘录" aria-label="Permalink to &quot;术语表（摘录）&quot;">​</a></h2><ul><li>类型层面 vs 值层面：在设计程序时区分“类型计算”与“值运行”</li><li>分配条件类型：T extends U ? X : Y；联合分发是默认行为</li><li>映射类型：{ [K in Keys]: ... } 基于键联合生成新对象类型</li></ul>',11)]))}const b=a(r,[["render",o]]);export{u as __pageData,b as default};
