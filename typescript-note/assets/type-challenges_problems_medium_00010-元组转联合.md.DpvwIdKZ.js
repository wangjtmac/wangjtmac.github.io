import{_ as t,c as l,o as n,ag as s,j as e,a as h,t as p}from"./chunks/framework.C6BsaGkr.js";const u=JSON.parse('{"title":"00010 - 元组转联合","description":"","frontmatter":{},"headers":[],"relativePath":"type-challenges/problems/medium/00010-元组转联合.md","filePath":"type-challenges/problems/medium/00010-元组转联合.md","lastUpdated":1755503905000}'),r={name:"type-challenges/problems/medium/00010-元组转联合.md"},o={id:"frontmatter-title",tabindex:"-1"};function d(i,a,k,c,g,m){return n(),l("div",null,[a[1]||(a[1]=s(`<p><a href="/typescript-note/type-challenges/medium.html">← 返回 Medium 目录</a></p><blockquote><p>内容来源：yuzai/type-challenge（10-元组转联合.md） 原文链接：<a href="https://raw.githubusercontent.com/yuzai/type-challenge/main/docs/type-challenges/problems/medium/00010-%E5%85%83%E7%BB%84%E8%BD%AC%E8%81%94%E5%90%88" target="_blank" rel="noreferrer">https://raw.githubusercontent.com/yuzai/type-challenge/main/docs/type-challenges/problems/medium/00010-元组转联合</a></p></blockquote><h1 id="_00010-元组转联合" tabindex="-1">00010 - 元组转联合 <a class="header-anchor" href="#_00010-元组转联合" aria-label="Permalink to &quot;00010 - 元组转联合&quot;">​</a></h1><hr><h2 id="title-10-元组转联合lang-zh-cn" tabindex="-1">title: 10-元组转联合 lang: zh-CN <a class="header-anchor" href="#title-10-元组转联合lang-zh-cn" aria-label="Permalink to &quot;title: 10-元组转联合
lang: zh-CN&quot;">​</a></h2>`,5)),e("h1",o,[h(p(i.$frontmatter.title)+" ",1),a[0]||(a[0]=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1))]),a[2]||(a[2]=s(`<h2 id="题目描述" tabindex="-1">题目描述 <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;题目描述&quot;">​</a></h2><p>实现泛型<code>TupleToUnion&lt;T&gt;</code>，它返回元组所有值的合集。</p><p>例如</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TupleToUnion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Arr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// expected to be &#39;1&#39; | &#39;2&#39; | &#39;3&#39;</span></span></code></pre></div><h2 id="分析" tabindex="-1">分析 <a class="header-anchor" href="#分析" aria-label="Permalink to &quot;分析&quot;">​</a></h2><p>这个题其实在前面的题目中均有所涉及，本质就是利用 索引签名 <code>T[number]</code> 进行访问，即可得到联合类型，相关的内容可以查看 <a href="/typescript-note/type-challenges/problems/easy/00011-tuple-to-object.html">11-元组转换为对象</a>。说实话，这题比那个题还简单，列在 medium 里着实不太合适。</p><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TupleToUnion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><h2 id="知识点" tabindex="-1">知识点 <a class="header-anchor" href="#知识点" aria-label="Permalink to &quot;知识点&quot;">​</a></h2><ol><li>索引签名访问，<code>T[number]</code></li></ol><hr><div class="nav-pager"><span>上一题：<a href="/type-challenges/problems/type-challenges/problems/medium/00009-实现DeepReadonly">00009 实现DeepReadonly</a></span><span style="float:right;">下一题：<a href="/type-challenges/problems/type-challenges/problems/medium/00012-可串联构造器">00012 可串联构造器</a></span></div>`,12))])}const E=t(r,[["render",d]]);export{u as __pageData,E as default};
