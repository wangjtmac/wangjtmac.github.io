import{_ as t,c as l,o as n,ag as s,j as a,a as h,t as r}from"./chunks/framework.C6BsaGkr.js";const m=JSON.parse('{"title":"18220 - filter","description":"","frontmatter":{},"headers":[],"relativePath":"type-challenges/problems/medium/18220-filter.md","filePath":"type-challenges/problems/medium/18220-filter.md","lastUpdated":1757560412000}'),p={name:"type-challenges/problems/medium/18220-filter.md"},k={id:"frontmatter-title",tabindex:"-1"};function d(e,i,o,g,c,y){return n(),l("div",null,[i[1]||(i[1]=s(`<p><a href="/typescript-note/type-challenges/medium.html">← 返回 Medium 目录</a></p><blockquote><p>内容来源：yuzai/type-challenge（18220-filter.md） 原文链接：<a href="https://raw.githubusercontent.com/yuzai/type-challenge/main/docs/type-challenges/problems/medium/18220-filter" target="_blank" rel="noreferrer">https://raw.githubusercontent.com/yuzai/type-challenge/main/docs/type-challenges/problems/medium/18220-filter</a></p></blockquote><h1 id="_18220-filter" tabindex="-1">18220 - filter <a class="header-anchor" href="#_18220-filter" aria-label="Permalink to &quot;18220 - filter&quot;">​</a></h1><hr><h2 id="title-18220-filterlang-zh-cn" tabindex="-1">title: 18220-filter lang: zh-CN <a class="header-anchor" href="#title-18220-filterlang-zh-cn" aria-label="Permalink to &quot;title: 18220-filter
lang: zh-CN&quot;">​</a></h2>`,5)),a("h1",k,[h(r(e.$frontmatter.title)+" ",1),i[0]||(i[0]=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1))]),i[2]||(i[2]=s(`<h2 id="题目描述" tabindex="-1">题目描述 <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;题目描述&quot;">​</a></h2><p>Implement the type <code>Filter&lt;T, Predicate&gt;</code> takes an Array <code>T</code>, primitive type or union primitive type <code>Predicate</code> and returns an Array include the elements of <code>Predicate</code>.</p><h2 id="分析" tabindex="-1">分析 <a class="header-anchor" href="#分析" aria-label="Permalink to &quot;分析&quot;">​</a></h2><p>这一题的思路其实也非常简单，只需要遍历元组，判断当前元素是否是 Predicate 即可。</p><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[], </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...infer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ?</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 简单判定 F 是否是 P 类型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> P</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ?</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 是，保留当前元素，并递归剩余元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    :</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 否则去除当前元素，递归剩余元素即可</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">R</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [];</span></span></code></pre></div><h2 id="知识点" tabindex="-1">知识点 <a class="header-anchor" href="#知识点" aria-label="Permalink to &quot;知识点&quot;">​</a></h2><ol><li>元组遍历套路</li></ol><hr><div class="nav-pager"><span>上一题：<a href="/type-challenges/problems/type-challenges/problems/medium/18142-all">18142 all</a></span><span style="float:right;">下一题：<a href="/type-challenges/medium">返回目录</a></span></div>`,10))])}const F=t(p,[["render",d]]);export{m as __pageData,F as default};
