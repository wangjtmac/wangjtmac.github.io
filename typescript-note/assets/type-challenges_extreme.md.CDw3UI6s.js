import{_ as l,c as t,o as a,ag as i}from"./chunks/framework.C6BsaGkr.js";const u=JSON.parse('{"title":"极限挑战","description":"","frontmatter":{},"headers":[],"relativePath":"type-challenges/extreme.md","filePath":"type-challenges/extreme.md","lastUpdated":1755503905000}'),r={name:"type-challenges/extreme.md"};function o(n,e,s,c,h,p){return a(),t("div",null,e[0]||(e[0]=[i('<h1 id="极限挑战" tabindex="-1">极限挑战 <a class="header-anchor" href="#极限挑战" aria-label="Permalink to &quot;极限挑战&quot;">​</a></h1><p>这里收集了一些极限难度的 TypeScript 类型挑战题目。</p><h2 id="题目列表" tabindex="-1">题目列表 <a class="header-anchor" href="#题目列表" aria-label="Permalink to &quot;题目列表&quot;">​</a></h2><h3 id="题目目录-extreme-本地文档" tabindex="-1">题目目录（Extreme，本地文档） <a class="header-anchor" href="#题目目录-extreme-本地文档" aria-label="Permalink to &quot;题目目录（Extreme，本地文档）&quot;">​</a></h3><ul><li><p><a href="/typescript-note/type-challenges/problems/extreme/00005-GetReadOnlyKeys.html">00005 GetReadOnlyKeys</a></p><ul><li>题面摘要：实现 <code>GetReadOnlyKeys&lt;T&gt;</code>，获取对象中只读属性的键</li></ul></li><li><p><a href="/typescript-note/type-challenges/problems/extreme/00151-QueryStringParser.html">00151 QueryStringParser</a></p><ul><li>题面摘要：实现查询字符串解析器的类型版本</li></ul></li><li><p><a href="/typescript-note/type-challenges/problems/extreme/00216-实现slice.html">00216 实现slice</a></p><ul><li>题面摘要：实现 <code>Slice&lt;T, Start, End&gt;</code>，数组切片操作的类型版本</li></ul></li><li><p><a href="/typescript-note/type-challenges/problems/extreme/00274-整数比较器.html">00274 整数比较器</a></p><ul><li>题面摘要：实现整数比较器的类型版本</li></ul></li><li><p><a href="/typescript-note/type-challenges/problems/extreme/00462-柯里化2.html">00462 柯里化2</a></p><ul><li>题面摘要：实现高级柯里化函数的类型定义</li></ul></li><li><p><a href="/typescript-note/type-challenges/problems/extreme/00476-Sum.html">00476 Sum</a></p><ul><li>题面摘要：实现数字求和的类型版本</li></ul></li></ul><h2 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-label="Permalink to &quot;使用说明&quot;">​</a></h2><ul><li>点击上面的&quot;本地文档&quot;链接查看每题的完整题面与解答</li><li>本页仅作为&quot;目录与摘要&quot;使用，避免与题目页面重复</li><li>建议按照题目编号顺序学习，循序渐进</li></ul><h2 id="学习建议" tabindex="-1">学习建议 <a class="header-anchor" href="#学习建议" aria-label="Permalink to &quot;学习建议&quot;">​</a></h2><ol><li><strong>基础先行</strong>：确保已掌握 Easy、Medium、Hard 级别的所有题目</li><li><strong>理解原理</strong>：重点关注极限类型技巧和复杂场景</li><li><strong>实践练习</strong>：在 <code>examples/advanced/type-challenges.ts</code> 中编写解题代码</li><li><strong>记录笔记</strong>：在记忆库中记录解题思路和技巧</li><li><strong>参考技巧</strong>：结合 <code>techniques.md</code> 和 <code>solving-guide.md</code> 学习</li></ol><h2 id="历史内容" tabindex="-1">历史内容 <a class="header-anchor" href="#历史内容" aria-label="Permalink to &quot;历史内容&quot;">​</a></h2><details><summary>历史内容（已迁移，点击展开）</summary><p>本页汇总官方地狱级（Extreme）题目目录，附中文标题与题面摘要，原题链接指向官方仓库，便于对照与更新。</p><blockquote><p>注：本页先建立目录结构与若干代表性条目，待你确认格式后，我再批量补全所有题目条目。</p></blockquote><h3 id="官方题目索引-extreme" tabindex="-1">官方题目索引（Extreme） <a class="header-anchor" href="#官方题目索引-extreme" aria-label="Permalink to &quot;官方题目索引（Extreme）&quot;">​</a></h3><ul><li><p>000XX AnyOf（数组真值判断）</p><ul><li>题面摘要：实现 <code>AnyOf&lt;T&gt;</code>，判断元组中是否存在&quot;真值&quot;（过滤掉 0/&#39;&#39;/false/[]/{} 等&quot;假值&quot;定义需与题目一致）。</li><li>原题链接：<a href="https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-anyof/README.md" target="_blank" rel="noreferrer">https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-anyof/README.md</a></li></ul></li><li><p>000XX UnionToTuple（联合转元组）</p><ul><li>题面摘要：实现 <code>UnionToTuple&lt;U&gt;</code>，把无序联合转为有序元组（要求利用分发与函数重载优先级，极具挑战）。</li><li>原题链接：<a href="https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-union-to-tuple/README.md" target="_blank" rel="noreferrer">https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-union-to-tuple/README.md</a></li></ul></li><li><p>000XX CamelCase（短横线转驼峰）</p><ul><li>题面摘要：实现 <code>CamelCase&lt;S&gt;</code>，对包含连字符的字符串字面量进行驼峰化转换（要求处理边界与多段）。</li><li>原题链接：<a href="https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-camelcase/README.md" target="_blank" rel="noreferrer">https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-camelcase/README.md</a></li></ul></li><li><p>000XX KebabCase（驼峰转短横线）</p><ul><li>题面摘要：实现 <code>KebabCase&lt;S&gt;</code>，把驼峰字符串转换为 kebab-case（需考虑连续大写与边界）。</li><li>原题链接：<a href="https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-kebabcase/README.md" target="_blank" rel="noreferrer">https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-kebabcase/README.md</a></li></ul></li><li><p>000XX IsAny / IsNever / IsUnknown（类型判断）</p><ul><li>题面摘要：实现对特殊顶级类型 any/never/unknown 的精准判定（通常结合分发/交叉/extends 技巧）。</li><li>原题链接：<a href="https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-isany/README.md" target="_blank" rel="noreferrer">https://github.com/type-challenges/type-challenges/blob/main/questions/xxxx-extreme-isany/README.md</a></li></ul></li></ul></details>',11)]))}const x=l(r,[["render",o]]);export{u as __pageData,x as default};
