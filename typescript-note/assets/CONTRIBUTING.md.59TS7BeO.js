import{_ as e,c as s,o as t,ag as n}from"./chunks/framework.C6BsaGkr.js";const u=JSON.parse('{"title":"代码提交规范","description":"","frontmatter":{},"headers":[],"relativePath":"CONTRIBUTING.md","filePath":"CONTRIBUTING.md","lastUpdated":1752020874000}'),l={name:"CONTRIBUTING.md"};function o(i,a,r,c,d,p){return t(),s("div",null,a[0]||(a[0]=[n(`<h1 id="代码提交规范" tabindex="-1">代码提交规范 <a class="header-anchor" href="#代码提交规范" aria-label="Permalink to &quot;代码提交规范&quot;">​</a></h1><h2 id="提交信息格式" tabindex="-1">提交信息格式 <a class="header-anchor" href="#提交信息格式" aria-label="Permalink to &quot;提交信息格式&quot;">​</a></h2><p>提交信息应遵循 <a href="https://www.conventionalcommits.org/" target="_blank" rel="noreferrer">Conventional Commits</a> 规范，格式为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;类型&gt;(&lt;范围&gt;): &lt;描述&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[可选正文]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[可选脚注]</span></span></code></pre></div><h3 id="类型-必选" tabindex="-1">类型（必选） <a class="header-anchor" href="#类型-必选" aria-label="Permalink to &quot;类型（必选）&quot;">​</a></h3><ul><li><code>feat</code>: 新增功能</li><li><code>fix</code>: 修复缺陷</li><li><code>docs</code>: 文档修改</li><li><code>style</code>: 代码风格调整（不影响功能，如空格、分号）</li><li><code>refactor</code>: 代码重构（非新增功能或修复缺陷）</li><li><code>test</code>: 测试用例修改</li><li><code>chore</code>: 构建/工具/依赖等非代码修改</li></ul><h3 id="范围-可选" tabindex="-1">范围（可选） <a class="header-anchor" href="#范围-可选" aria-label="Permalink to &quot;范围（可选）&quot;">​</a></h3><p>指定修改涉及的模块或功能范围，例如：<code>chapter7</code>（对应第7章内容）、<code>typescript</code>（TypeScript 类型定义）等。</p><h3 id="描述-必选" tabindex="-1">描述（必选） <a class="header-anchor" href="#描述-必选" aria-label="Permalink to &quot;描述（必选）&quot;">​</a></h3><p>简洁描述修改内容（建议不超过50字符），使用祈使句（如&quot;add error handling example&quot; 而非 &quot;added&quot;）。</p><h2 id="提交粒度" tabindex="-1">提交粒度 <a class="header-anchor" href="#提交粒度" aria-label="Permalink to &quot;提交粒度&quot;">​</a></h2><ul><li>单一职责：每次提交应只包含一个功能改进或缺陷修复，避免混合多个不相关修改。</li><li>原子性：确保提交代码可独立编译/运行，避免半成品状态。</li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><ul><li><code>feat(chapter7): add functional error handling example</code>（第7章新增函数式错误处理示例）</li><li><code>fix(json-parse): correct syntax error in safeParseJSON function</code>（修复safeParseJSON函数语法错误）</li><li><code>docs(guidelines): update contributing rules for commit messages</code>（更新提交规范文档）</li></ul><h2 id="关联问题" tabindex="-1">关联问题 <a class="header-anchor" href="#关联问题" aria-label="Permalink to &quot;关联问题&quot;">​</a></h2><p>若提交与Issue或任务相关，可在脚注中添加关联信息，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fix(chapter7): resolve JSON parse error</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Closes: #123</span></span></code></pre></div>`,17)]))}const m=e(l,[["render",o]]);export{u as __pageData,m as default};
